<%-include('../layouts/adminHead')-%>

<%-include('../layouts/adminSidebar')-%>
<!-- space   -->
<div class="main-panel">
  <div class="content-wrapper">
    <!-- form to add new product   -->
    <div class="col-12 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Add new product</h4>
          <form class="forms-product" action="/product/AddProduct" method="post" enctype="multipart/form-data">
            <!--Name-->
            <div class="form-group">
              <label for="exampleInputName1">Name</label>
              <input type="text" class="form-control" id="name" name="name" pattern="[A-Za-z ]+"
                title="Please enter letters and spaces only">
              <span class="error-message text-danger" id="name-error-message"></span>
            </div>
            <!--Unit price-->
            <div class="form-group">
              <label for="price">Unit Price</label>
              <input type="text" class="form-control" name="price" id="price-input" placeholder="Enter numbers only">
              <span class="error-message text-danger" id="price-error-msg"></span>
            </div>
            <!--Category-->
            <div class="form-group">
              <label for="category">Category</label>
              <select class="form-control" name="category" id='categorySelect'>
                <% for(let i=0;i<cat.length;i++){%>
                <option><%=cat[i].Name%></option>
                <%}%>
              </select>
              <span class="error-message text-danger" id="category-error-message"></span>
            </div>

            <!--Quantity-->
            <div class="form-group">
              <label for="">Quantity in Kg</label>
              <input type="text" class="form-control" name="quantity" id="quantit-input"
                placeholder="Enter numbers only">
              <span class="error-message text-danger" id="quantity-error-message"></span>
            </div>
    
<!--Images-->
<div class="form-group">
  <label>File upload (Images only)</label>
  <input type="file" name="images" id="image-input" class="form-control file-upload-default" multiple accept="image/*">
  <div class="input-group col-xs-12">
    <input type="text" class="form-control file-upload-info" disabled placeholder="Upload Image">
    <span class="input-group-append">
      <button class="file-upload-browse btn btn-gradient-primary" type="button" id="img-upload-btn">Upload</button>
    </span>
  </div>
  <span id="image-error-message" class="error-message text-danger"></span>
</div>
<!-- Image Previews -->
<div id="image-preview" class="preview-container"></div><br>




            <!--Description-->
            <div class="form-group">
              <label>Product Description</label>
              <textarea class="form-control" name="description" id="exampleTextarea1" rows="4"></textarea>
            </div>

            <button type="submit" class="btn btn-gradient-success mr-2">Submit</button>
            <button class="btn btn-light" onclick="location.href='/product'">Cancel</button>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<!--product list-->

<%-include('../layouts/adminFooter')-%>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector('.forms-product');

    form.addEventListener('submit', (e) => {
      const priceInput = document.getElementById('price-input');
      const quantityInput = document.getElementById('quantit-input');
      const imagesInput = document.getElementById('image-input');
      const nameInput = document.getElementById('name');
      const pidInput = document.getElementById('pidinput');

      const priceErrorMessage = document.getElementById('price-error-msg');
      const quantityErrorMessage = document.getElementById('quantity-error-message');
      const imagesErrorMessage = document.getElementById('image-error-message');
      const nameErrorMessage = document.getElementById('name-error-message');
      const pidErrorMessage = document.getElementById("pid-error-message");

      // name Validation
      if (!nameInput.value) {
        e.preventDefault();
        nameErrorMessage.textContent = 'Please enter a valid name';
      } else {
        nameErrorMessage.textContent = '';
      }

    

      // Price Validation
      if (!priceInput.value.match(/^\d+(\.\d{1,2})?$/)) {
        e.preventDefault();
        priceErrorMessage.textContent = 'Please enter a valid price (numbers only)';
      } else {
        priceErrorMessage.textContent = '';
      }

      // Quantity Validation
      if (!quantityInput.value.match(/^\d+(\.\d{1,2})?$/)) {
        e.preventDefault();
        quantityErrorMessage.textContent = 'Please enter a valid quantity (numbers only)';
      } else {
        quantityErrorMessage.textContent = '';
      }

      // File Upload Validation
      const allowedExtensions = ['jpg', 'jpeg', 'png','webp','JPG','JPEG','WEBP'];
      const files = imagesInput.files;
      let isValid = true;

      for (let i = 0; i < files.length; i++) {
        const fileName = files[i].name;
        const fileExtension = fileName.split('.').pop().toLowerCase();

        if (!allowedExtensions.includes(fileExtension)) {
          isValid = false;
          break;
        }
      }

      if (!isValid) {
        e.preventDefault();
        imagesErrorMessage.textContent = 'Please upload only JPG, JPEG, or PNG files';
      } else {
        imagesErrorMessage.textContent = '';
      }
    });
  });
</script>

<!-- JavaScript for Image Preview -->
<script>
  document.querySelector('.file-upload-browse').addEventListener("click", () => {
    document.querySelector('#image-input').click();
  });

  // Function to preview selected images
  function previewImages() {
    const previewContainer = document.getElementById('image-preview');
    const files = document.getElementById('image-input').files;
    const maxPreviewImages = 3; // Maximum number of images to preview

    previewContainer.innerHTML = ''; // Clear previous previews

    for (let i = 0; i < maxPreviewImages && i < files.length; i++) {
      const file = files[i];
      const reader = new FileReader();

      reader.onload = function (e) {
        const img = document.createElement('img');
        img.src = e.target.result;
        img.classList.add('preview-image');
        previewContainer.appendChild(img);
      };

      reader.readAsDataURL(file);
    }
  }

  document.getElementById('image-input').addEventListener('change', previewImages);
</script>

<style>
  .preview-container {
    display: flex;
    gap: 10px;
  }

  .preview-image {
    width: 100px; /* Adjust as needed */
    height: 100px; /* Adjust as needed */
    object-fit: cover;
    border-radius: 5px;
  }
</style>