<%- include('../layouts/adminHead')-%>
<%- include('../layouts/adminSidebarNoS')-%>
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
<div class="main-panel">
  <div class="content-wrapper">
    <div class="col-12 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Add new product</h4>
          <% if (locals.message) { %>
            <span style="color: red;">
              <%= message %>
            </span>
          <% } %>
          <form class="forms-product" action="/product/AddProduct" method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
            <!-- Name -->
            <div class="form-group">
              <label for="exampleInputName1">Name</label>
              <input type="text" class="form-control" id="name" name="name">
              <span class="error-message text-danger" id="name-error-message"></span>
            </div>
            <!-- Unit price -->
            <div class="form-group">
              <label for="price">Unit Price</label>
              <input type="text" class="form-control" name="price" id="price-input" placeholder="Enter numbers only">
              <span class="error-message text-danger" id="price-error-msg"></span>
            </div>
            <!-- Category -->
            <div class="form-group">
              <label for="category">Category</label>
              <select class="form-control" name="category" id="categorySelect">
                <% for(let i=0; i<cat.length; i++){ %>
                  <option><%= cat[i].Name %></option>
                <% } %>
              </select>
              <span class="error-message text-danger" id="category-error-message"></span>
            </div>
            <!-- Quantity -->
            <div class="form-group">
              <label for="quantity">Quantity in Kg</label>
              <input type="text" class="form-control" name="quantity" id="quantity-input" placeholder="Enter numbers only">
              <span class="error-message text-danger" id="quantity-error-message"></span>
            </div>
            <!-- Images -->
            <div class="form-group">
              <label>Images</label>
              <input type="file" name="images" class="file-upload-default" accept="image/*" multiple onchange="handleFileSelect(event)" id="imageInput">
              <div class="input-group col-xs-12">
                <input type="text" class="form-control file-upload-info" disabled placeholder="Upload Image" id="fileCount" value="">
                <span class="input-group-append">
                  <button class="file-upload-browse btn btn-gradient-light" type="button" onclick="document.getElementById('imageInput').click()">Upload</button>
                </span>
              </div>
              <div id="imagePreview"></div>
              <small id="imageError" class="text-danger"></small>
            </div>

            <!-- Description -->
            <div class="form-group">
              <label>Product Description</label>
              <textarea class="form-control" name="description" id="exampleTextarea1" rows="4"></textarea>
            </div>
            <button type="submit" class="btn btn-gradient-success mr-2">Submit</button>
            <button class="btn btn-light" onclick="location.href='/product'">Cancel</button>
          </form>
        </div>
      </div>
    </div>
  </div>
</div>
  <!-- Modal -->
<div id="cropModal" class="modal fade" tabindex="-1" role="dialog">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Crop Image</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="img-container">
          <img id="cropperImage" src="" alt="Image for cropping" style="max-width: 100%;">
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="cropButton">Crop</button>
      </div>
    </div>
  </div>
</div>
<link href="https://unpkg.com/cropperjs/dist/cropper.css" rel="stylesheet">
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
  <script src="https://unpkg.com/cropperjs"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>



<%- include('../layouts/adminFooter')-%>

<script>
  let cropper;
  let currentFileIndex = -1;
  let files = [];
  let images = [];

  function handleFileSelect(event) {
    const preview = document.getElementById('imagePreview');
    preview.innerHTML = '';

    files = Array.from(event.target.files);
    images = files.slice();
    const filesAmount = files.length;

    document.getElementById('fileCount').value = filesAmount + ' files selected';

    for (let i = 0; i < filesAmount; i++) {
      const reader = new FileReader();

      reader.onload = function(event) {
        const imageWrapper = document.createElement('div');
        imageWrapper.style.position = 'relative';
        imageWrapper.style.display = 'inline-block';
        imageWrapper.style.marginRight = '10px';

        const imageElement = document.createElement('img');
        imageElement.src = event.target.result;
        imageElement.style.width = '100px';
        imageElement.style.boxShadow = '0px 4px 6px rgba(0, 0, 0, 0.1)';

        const removeButton = document.createElement('button');
        removeButton.innerText = 'x';
        removeButton.style.position = 'absolute';
        removeButton.style.top = '0';
        removeButton.style.right = '0';
        removeButton.style.color = 'rgb(255, 255, 255)';
        removeButton.style.backgroundColor = 'rgb(255, 0, 0)';
        removeButton.style.border = 'none';
        removeButton.style.borderRadius = '50%';
        removeButton.style.cursor = 'pointer';
        removeButton.onclick = function() {
          removeImage(i);
        };

        const cropButton = document.createElement('button');
        cropButton.type = 'button';
        cropButton.innerText = 'Crop';
        cropButton.style.position = 'absolute';
        cropButton.style.bottom = '0';
        cropButton.style.right = '30px';
        cropButton.style.color = 'white';
        cropButton.style.backgroundColor = 'green';
        cropButton.style.border = 'none';
        cropButton.style.borderRadius = '5px';
        cropButton.style.cursor = 'pointer';
        cropButton.onclick = function() {
          currentFileIndex = i;
          document.getElementById('cropperImage').src = event.target.result;
          $('#cropModal').modal('show');
          initializeCropper();
        };

        imageWrapper.appendChild(imageElement);
        imageWrapper.appendChild(removeButton);
        imageWrapper.appendChild(cropButton);
        preview.appendChild(imageWrapper);
      };

      reader.readAsDataURL(files[i]);
    }
  }

  function removeImage(index) {
    images.splice(index, 1);
    const fileList = new DataTransfer();
    images.forEach(file => {
      fileList.items.add(file);
    });

    document.getElementById('imageInput').files = fileList.files;
    handleFileSelect({
      target: {
        files: fileList.files
      }
    });

    document.getElementById('imageInput').value = '';
  }

  function initializeCropper() {
    const image = document.getElementById('cropperImage');
    cropper = new Cropper(image, {
      aspectRatio: 1,
      viewMode: 1,
      autoCropArea: 1,
    });
  }

  document.getElementById('cropButton').addEventListener('click', function(event) {
    event.preventDefault(); 
    const canvas = cropper.getCroppedCanvas({
      width: 400,
      height: 400,
    });

    canvas.toBlob(function(blob) {
      const newFile = new File([blob], images[currentFileIndex].name, {
        type: 'image/jpeg', // Use JPEG for better compression
      });

      images[currentFileIndex] = newFile;

      const fileList = new DataTransfer();
      images.forEach(file => {
        fileList.items.add(file);
      });

      document.getElementById('imageInput').files = fileList.files;

      const url = URL.createObjectURL(newFile);
      const preview = document.getElementById('imagePreview').children[currentFileIndex].children[0];
      preview.src = url;

      $('#cropModal').modal('hide');
      cropper.destroy();
    }, 'image/jpeg');
  });

  function validateForm() {
    // Your existing form validation logic
  }
</script>
