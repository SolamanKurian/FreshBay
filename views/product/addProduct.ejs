<%- include('../layouts/adminHead') %>
<%- include('../layouts/adminSidebarNoS') %>

<div class="main-panel">
  <div class="content-wrapper">
    <div class="col-12 grid-margin stretch-card">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Edit Product</h4>
          <% if (locals.message) { %>
            <span style="color: red;">
              <%= message %>
            </span>
          <% } %>
          <form class="forms-product" enctype="multipart/form-data" method="POST" action="/product/editProduct?pid=<%= product._id %>" onsubmit="return validateForm()">
            <!-- Name -->
            <div class="form-group">
              <label for="exampleInputName1">Name</label>
              <input type="text" class="form-control" id="name" name="name" value="<%= product.Name %>" title="Please enter letters and spaces only">
              <span class="error-message text-danger" id="name-error-message"></span>
            </div>

            <!-- Unit Price -->
            <div class="form-group">
              <label for="price">Unit Price</label>
              <input type="text" class="form-control" name="price" id="price-input" value="<%= product.Price %>">
              <span class="error-message text-danger" id="price-error-msg"></span>
            </div>

            <!-- Category -->
            <div class="form-group">
              <label for="category">Category</label>
              <select class="form-control" name="category" id="categorySelect">
                <% for (let i = 0; i < cat.length; i++) { %>
                  <option <%= cat[i].Name === product.Category.Name ? 'selected' : '' %>>
                    <%= cat[i].Name %>
                  </option>
                <% } %>
              </select>
              <span class="error-message text-danger" id="category-error-message"></span>
            </div>

            <!-- Quantity -->
            <div class="form-group">
              <label for="quantity">Quantity in Kg</label>
              <input type="text" class="form-control" name="quantity" id="quantity-input" value="<%= product.Quantity %>">
              <span class="error-message text-danger" id="quantity-error-message"></span>
            </div>

            <!-- Images -->
            <div class="form-group">
              <label>File upload (Images only)</label>
              <input type="file" name="images" id="image-input" class="form-control file-upload-default" multiple accept="image/*">
              <div class="input-group col-xs-12">
                <input type="text" class="form-control file-upload-info" disabled placeholder="Upload Image">
                <span class="input-group-append">
                  <button class="file-upload-browse btn btn-gradient-primary" type="button" id="img-upload-btn">Upload</button>
                </span>
              </div>
              <span id="image-error-message" class="error-message text-danger"></span>
              <!-- Existing Image with Cross Marks -->
              <div class="image-preview d-flex mt-2">
                <% for (let i = 0; i < product.Image.length; i++) { %>
                  <div class="mr-2 image-container">
                    <button class="remove-image-btn" data-index="<%= i %>" type="button">&times;</button>
                    <img src="/productimages/<%= product.Image[i] %>" width="100px">
                  </div>
                <% } %>
              </div>
            </div>

            <!-- Image Previews -->
            <div id="image-preview" class="preview-container"></div><br>

            <!-- Description -->
            <div class="form-group">
              <label>Product Description</label>
              <textarea class="form-control" name="description" id="exampleTextarea1" rows="4"><%= product.Pdesc %></textarea>
            </div>

            <button type="submit" class="btn btn-gradient-success mr-2">Submit</button>
          </form>
          <button class="btn btn-light" onclick="location.href='/product'">Cancel</button>
        </div>
      </div>
    </div>
  </div>
</div>

<%- include('../layouts/adminFooter') %>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector('.forms-product');
    const imageInput = document.getElementById('image-input');
    const imagePreview = document.getElementById('image-preview');
    let cropper;

    imageInput.addEventListener('change', () => {
      if (cropper) {
        cropper.destroy();
      }

      const files = imageInput.files;
      const maxPreviewImages = 3;

      imagePreview.innerHTML = '';

      for (let i = 0; i < maxPreviewImages && i < files.length; i++) {
        const reader = new FileReader();

        reader.onload = (e) => {
          const img = document.createElement('img');
          img.src = e.target.result;
          img.classList.add('preview-image');
          imagePreview.appendChild(img);

          cropper = new Cropper(img, {
            aspectRatio: 1,
            viewMode: 1,
            background: false,
          });
        };

        reader.readAsDataURL(files[i]);
      }
    });

    form.addEventListener('submit', (e) => {
      const nameInput = document.getElementById('name');
      const priceInput = document.getElementById('price-input');
      const quantityInput = document.getElementById('quantity-input');
      const imagesInput = document.getElementById('image-input');

      const nameErrorMessage = document.getElementById('name-error-message');
      const priceErrorMessage = document.getElementById('price-error-msg');
      const quantityErrorMessage = document.getElementById('quantity-error-message');
      const imagesErrorMessage = document.getElementById('image-error-message');

      const name = nameInput.value.trim();
      const price = priceInput.value.trim();
      const quantity = quantityInput.value.trim();
      const allowedExtensions = ['jpg', 'jpeg', 'png', 'webp', 'JPG', 'JPEG', 'WEBP'];
      const files = imagesInput.files;

      let isValid = true;

      nameErrorMessage.textContent = '';
      priceErrorMessage.textContent = '';
      quantityErrorMessage.textContent = '';
      imagesErrorMessage.textContent = '';

      if (name === '') {
        isValid = false;
        nameErrorMessage.textContent = 'Please enter a valid name';
      } else {
        nameInput.value = name;
      }
      if (!price.match(/^\d+(\.\d{1,2})?$/)) {
        isValid = false;
        priceErrorMessage.textContent = 'Please enter a valid price';
      } else {
        priceInput.value = price;
      }

      if (!quantity.match(/^\d+$/)) {
        isValid = false;
        quantityErrorMessage.textContent = 'Please enter a valid quantity';
      } else {
        quantityInput.value = quantity;
      }

      if (files.length === 0) {
        isValid = false;
        imagesErrorMessage.textContent = 'Please upload at least one image';
      } else {
        for (const file of files) {
          const extension = file.name.split('.').pop().toLowerCase();
          if (!allowedExtensions.includes(extension)) {
            isValid = false;
            imagesErrorMessage.textContent = 'Invalid file format. Please upload images only';
            break;
          }
        }
      }

      if (!isValid) {
        e.preventDefault(); // Prevent form submission
      }
    });

    // Remove image preview on click of remove button
    imagePreview.addEventListener('click', (e) => {
      if (e.target.classList.contains('remove-image-btn')) {
        const index = parseInt(e.target.dataset.index);
        const previewImages = document.querySelectorAll('.preview-image');
        const newImages = [...previewImages].filter((img, i) => i !== index);

        imagePreview.innerHTML = ''; // Clear current previews

        newImages.forEach((img, i) => {
          img.dataset.index = i;
          imagePreview.appendChild(img);
        });

        imageInput.value = ''; // Clear selected files to avoid re-uploading on form submission
      }
    });
  });
</script>
